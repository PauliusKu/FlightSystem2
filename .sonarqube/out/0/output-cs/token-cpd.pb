∞
NC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\AsyncHelper.cs
	namespace 	

RebusAdmin
 
{ 
public 

static 
class 
AsyncHelper #
{		 
private

 
static

 
readonly

 
TaskFactory

  +
_taskFactory

, 8
=

9 :
new

; >
TaskFactory 
( 
CancellationToken )
.) *
None* .
,. /
TaskCreationOptions +
.+ ,
None, 0
,0 1#
TaskContinuationOptions /
./ 0
None0 4
,4 5
TaskScheduler %
.% &
Default& -
)- .
;. /
public 
static 
TResult 
RunSync %
<% &
TResult& -
>- .
(. /
Func/ 3
<3 4
Task4 8
<8 9
TResult9 @
>@ A
>A B
funcC G
)G H
=> 
_taskFactory 
. 
StartNew 
( 
func 
) 
. 
Unwrap 
( 
) 
. 

GetAwaiter 
( 
) 
. 
	GetResult 
( 
) 
; 
public 
static 
void 
RunSync "
(" #
Func# '
<' (
Task( ,
>, -
func. 2
)2 3
=> 
_taskFactory 
. 
StartNew 
( 
func 
) 
. 
Unwrap 
( 
) 
. 

GetAwaiter 
( 
) 
. 
	GetResult 
( 
) 
; 
} 
} Ã
`C:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Controllers\BalanceController.cs
	namespace 	

RebusAdmin
 
. 
Controllers  
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
BalanceController "
:# $
ControllerBase% 3
{ 
private 
readonly 
ILogger  
<  !!
StatusCheckController! 6
>6 7
_logger8 ?
;? @
public 
BalanceController  
(  !
ILogger! (
<( )!
StatusCheckController) >
>> ?
logger@ F
)F G
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
string 
GetAdmin 
( 
int "
userid# )
,) *
string+ 1
amount2 8
)8 9
{ 	
return 
AsyncHelper 
. 
RunSync &
(& '
(' (
)( )
=>* ,
WebApiClient- 9
.9 :
Call: >
(> ?
IntegrationConfig? P
.P Q
GetRebusNeoUriQ _
(_ `
)` a
+b c
$strd z
+{ |
userid	} É
+
Ñ Ö
$str
Ü ê
+
ë í
amount
ì ô
)
ô ö
)
ö õ
;
õ ú
} 	
} 
} Œ
`C:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Controllers\BanUserController.cs
	namespace 	

RebusAdmin
 
. 
Controllers  
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
BanUserController

 "
:

# $
ControllerBase

% 3
{ 
private 
readonly 
ILogger  
<  !!
StatusCheckController! 6
>6 7
_logger8 ?
;? @
public 
BanUserController  
(  !
ILogger! (
<( )!
StatusCheckController) >
>> ?
logger@ F
)F G
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
string 
Get 
( 
string  
userName! )
,) *
string+ 1
action2 8
)8 9
{ 	
return 
AsyncHelper 
. 
RunSync &
(& '
(' (
)( )
=>* ,
WebApiClient- 9
.9 :
Call: >
(> ?
IntegrationConfig? P
.P Q
GetRebusNeoUriQ _
(_ `
)` a
+b c
$strd w
+x y
userName	z Ç
+
É Ñ
$str
Ö è
+
ê ë
action
í ò
)
ò ô
)
ô ö
;
ö õ
} 	
} 
} ‘
cC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Controllers\DataUpdateController.cs
	namespace 	

RebusAdmin
 
. 
Controllers  
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 

DataUpdate		 
:		 
ControllerBase		 ,
{

 
private 
readonly 
ILogger  
<  !

DataUpdate! +
>+ ,
_logger- 4
;4 5
private 
DataUpdateManager !
_dataUpdateManager" 4
=5 6
new7 :
DataUpdateManager; L
(L M
)M N
;N O
public 

DataUpdate 
( 
ILogger !
<! "

DataUpdate" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
string 
Get 
( 
int 
days "
)" #
{ 	
_dataUpdateManager 
. "
updateAllDataFromFiles 5
(5 6
days6 :
): ;
;; <
return 
_dataUpdateManager %
.% &
	GetResult& /
(/ 0
days0 4
)4 5
;5 6
} 	
} 
} Ú
_C:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Controllers\ReportController.cs
	namespace 	

RebusAdmin
 
. 
Controllers  
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ReportController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
ILogger  
<  !!
StatusCheckController! 6
>6 7
_logger8 ?
;? @
public 
ReportController 
(  
ILogger  '
<' (!
StatusCheckController( =
>= >
logger? E
)E F
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
string 
Get 
( 
) 
{ 	
return 
AsyncHelper 
. 
RunSync &
(& '
(' (
)( )
=>* ,
WebApiClient- 9
.9 :
Call: >
(> ?
IntegrationConfig? P
.P Q
GetRebusNeoUriQ _
(_ `
)` a
+b c
$strd l
)l m
)m n
;n o
} 	
} 
} Ô
dC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Controllers\StatusCheckController.cs
	namespace 	

RebusAdmin
 
. 
Controllers  
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 !
StatusCheckController		 &
:		' (
ControllerBase		) 7
{

 
private 
readonly 
ILogger  
<  !!
StatusCheckController! 6
>6 7
_logger8 ?
;? @
private 
StatusManager 
_statusManager ,
=- .
new/ 2
StatusManager3 @
(@ A
)A B
;B C
public !
StatusCheckController $
($ %
ILogger% ,
<, -!
StatusCheckController- B
>B C
loggerD J
)J K
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
string 
Get 
( 
) 
{ 	
return 
_statusManager !
.! "
checkStatus" -
(- .
). /
./ 0
ToString0 8
(8 9
)9 :
;: ;
} 	
} 
} …†
ZC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Logic\DataUpdateManager.cs
	namespace 	

RebusAdmin
 
. 
Logic 
{ 
public 

class 
Airports 
{ 
public		 
string		 
Code		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
string 
City 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Country 
{ 
get  #
;# $
set% (
;( )
}* +
} 
public 

class 
Flights 
{ 
public 
string 
Company 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
	FlightNum 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
From 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
To 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Departs 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Arrives 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
ArrOnNextDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Price 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class 
	Countries 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Code 
{ 
get  
;  !
set" %
;% &
}' (
}   
public"" 

class"" 
Cities"" 
{## 
public$$ 
string$$ 
Name$$ 
{$$ 
get$$  
;$$  !
set$$" %
;$$% &
}$$' (
public%% 
string%% 
Country%% 
{%% 
get%%  #
;%%# $
set%%% (
;%%( )
}%%* +
}&& 
public(( 

class(( 
DataUpdateManager(( "
{)) 
private** 
int** 
_nodes** 
=** 
$num** 
;** 
private++ 
int++ 

_relations++ 
=++  
$num++! "
;++" #
private-- 
readonly-- 
DateTime-- !
_start--" (
=--) *
new--+ .
DateTime--/ 7
(--7 8
$num--8 <
,--< =
$num--> @
,--@ A
$num--B D
)--D E
;--E F
private.. 
DateTime.. 
_end.. 
=.. 
new..  #
DateTime..$ ,
(.., -
$num..- 1
,..1 2
$num..3 5
,..5 6
$num..7 9
)..9 :
;..: ;
public00 
string00 
	GetResult00 
(00  
int00  #
days00$ (
)00( )
{00* +
return00, 2
$str003 Y
+00Z [
_nodes00\ b
.00b c
ToString00c k
(00k l
)00l m
+00n o
$str00p ~
+	00 Ä
(
00Å Ç

_relations
00Ç å
+
00ç é
$num
00è ê
*
00ë í
days
00ì ó
)
00ó ò
.
00ò ô
ToString
00ô °
(
00° ¢
)
00¢ £
;
00£ §
}
00• ¶
public22 
void22 "
updateAllDataFromFiles22 *
(22* +
int22+ .
days22/ 3
)223 4
{33 	
_end44 
=44 
_end44 
.44 
AddDays44 
(44  
days44  $
)44$ %
;44% &
	DeleteAll66 
(66 
)66 
;66 
CreateCountries77 
(77 
)77 
;77 
CreateCities88 
(88 
)88 
;88 
CreateAirports99 
(99 
)99 
;99 
CreateAirportDays:: 
(:: 
):: 
;::  
CreateFlights;; 
(;; 
);; 
;;; 
Console== 
.== 
	WriteLine== 
(== 
	GetResult== '
(==' (
days==( ,
)==, -
)==- .
;==. /
}>> 	
public@@ 
void@@ 
	DeleteAll@@ 
(@@ 
)@@ 
{AA 	
Neo4JContextBB 
.BB 
RunQueryBB !
(BB! "
$strBB" =
)BB= >
;BB> ?
}CC 	
publicEE 
voidEE 
CreateCountriesEE #
(EE# $
)EE$ %
{FF 	
ListGG 
<GG 
	CountriesGG 
>GG 
	countriesGG %
=GG& '
ReadCountriesGG( 5
(GG5 6
)GG6 7
;GG7 8
foreachHH 
(HH 
varHH 
iHH 
inHH 
	countriesHH '
)HH' (
{II 
Neo4JContextJJ 
.JJ 
RunQueryJJ %
(JJ% &
$strJJ& ?
+JJ@ A
iJJB C
.JJC D
NameJJD H
+JJI J
$strJJK V
+JJW X
iJJY Z
.JJZ [
CodeJJ[ _
+JJ` a
$strJJb g
)JJg h
;JJh i
_nodesKK 
++KK 
;KK 
}LL 
}MM 	
publicOO 
voidOO 
CreateCitiesOO  
(OO  !
)OO! "
{PP 	
ListQQ 
<QQ 
CitiesQQ 
>QQ 
citiesQQ 
=QQ  !

ReadCitiesQQ" ,
(QQ, -
)QQ- .
;QQ. /
foreachRR 
(RR 
varRR 
iRR 
inRR 
citiesRR $
)RR$ %
{SS 
Neo4JContextTT 
.TT 
RunQueryTT %
(TT% &
$strTT& <
+TT= >
iTT? @
.TT@ A
NameTTA E
+TTF G
$strTTH V
+TTW X
iTTY Z
.TTZ [
CountryTT[ b
+TTc d
$strTTe j
)TTj k
;TTk l
_nodesUU 
++UU 
;UU 
Neo4JContextVV 
.VV 
RunQueryVV %
(VV% &
$strVV& <
+VV= >
iVV? @
.VV@ A
NameVVA E
+VVF G
$strVVH `
+VVa b
iVVc d
.VVd e
CountryVVe l
+VVm n
$str	VVo ê
)
VVê ë
;
VVë í

_relationsWW 
++WW 
;WW 
}XX 
}YY 	
public[[ 
void[[ 
CreateAirports[[ "
([[" #
)[[# $
{\\ 	
List]] 
<]] 
Airports]] 
>]] 
airports]] #
=]]$ %
ReadAirports]]& 2
(]]2 3
)]]3 4
;]]4 5
foreach^^ 
(^^ 
var^^ 
i^^ 
in^^ 
airports^^ &
)^^& '
{__ 
Neo4JContext`` 
.`` 
RunQuery`` %
(``% &
$str``& ?
+``@ A
i``B C
.``C D
Code``D H
+``I J
$str``K Z
+``[ \
i``] ^
.``^ _
Name``_ c
+``d e
$str``f q
+``r s
i``t u
.``u v
City``v z
+``{ |
$str	``} ã
+
``å ç
i
``é è
.
``è ê
Country
``ê ó
+
``ò ô
$str
``ö ü
)
``ü †
;
``† °
_nodesaa 
++aa 
;aa 
Neo4JContextbb 
.bb 
RunQuerybb %
(bb% &
$strbb& ?
+bb@ A
ibbB C
.bbC D
CodebbD H
+bbI J
$strbbK `
+bba b
ibbc d
.bbd e
Citybbe i
+bbj k
$str	bbl ä
)
bbä ã
;
bbã å

_relationscc 
++cc 
;cc 
}dd 
}ee 	
privategg 
voidgg 
CreateAirportDaysgg &
(gg& '
)gg' (
{hh 	
Listii 
<ii 
Airportsii 
>ii 
airportsii #
=ii$ %
ReadAirportsii& 2
(ii2 3
)ii3 4
;ii4 5
foreachjj 
(jj 
varjj 
ijj 
injj 
airportsjj &
)jj& '
{kk 
DateTimell 
beginll 
=ll  
_startll! '
;ll' (
DateTimemm 
endmm 
=mm 
_endmm #
;mm# $
foroo 
(oo 
DateTimeoo 
dateoo "
=oo# $
beginoo% *
;oo* +
dateoo, 0
<=oo1 3
endoo4 7
;oo7 8
dateoo9 =
=oo> ?
dateoo@ D
.ooD E
AddDaysooE L
(ooL M
$numooM N
)ooN O
)ooO P
{pp 
stringqq 
dateStrqq "
=qq# $
dateqq% )
.qq) *
ToStringqq* 2
(qq2 3
$strqq3 =
,qq= >
Systemqq? E
.qqE F
GlobalizationqqF S
.qqS T
CultureInfoqqT _
.qq_ `
InvariantCultureqq` p
)qqp q
;qqq r
Neo4JContextss  
.ss  !
RunQueryss! )
(ss) *
$strss* F
+ssG H
issI J
.ssJ K
CodessK O
+ssP Q
$strssR U
+ssV W
dateStrssX _
+ss` a
$strssb g
)ssg h
;ssh i
_nodestt 
++tt 
;tt 
Neo4JContextuu  
.uu  !
RunQueryuu! )
(uu) *
$struu* F
+uuG H
iuuI J
.uuJ K
CodeuuK O
+uuP Q
$struuR U
+uuV W
dateStruuX _
+uu` a
$struub z
+uu{ |
iuu} ~
.uu~ 
Code	uu É
+
uuÑ Ö
$str
uuÜ §
)
uu§ •
;
uu• ¶

_relationsvv 
++vv  
;vv  !
}ww 
}xx 
Systemyy 
.yy 
Consoleyy 
.yy 
	WriteLineyy $
(yy$ %
$stryy% F
+yyG H
_nodesyyI O
.yyO P
ToStringyyP X
(yyX Y
)yyY Z
+yy[ \
$stryy] k
+yyl m
(yyn o

_relationsyyo y
)yyy z
.yyz {
ToString	yy{ É
(
yyÉ Ñ
)
yyÑ Ö
)
yyÖ Ü
;
yyÜ á
}zz 	
public|| 
void|| 
CreateFlights|| !
(||! "
)||" #
{}} 	
List~~ 
<~~ 
Flights~~ 
>~~ 
flights~~ !
=~~" #
ReadFlights~~$ /
(~~/ 0
)~~0 1
;~~1 2
string
ÄÄ 
dateStr
ÄÄ 
,
ÄÄ 
dateNextStr
ÄÄ '
;
ÄÄ' (
DateTime
ÇÇ 
begin
ÇÇ 
=
ÇÇ 
_start
ÇÇ #
;
ÇÇ# $
DateTime
ÉÉ 
end
ÉÉ 
=
ÉÉ 
_end
ÉÉ 
;
ÉÉ  
int
ÖÖ 
num
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
for
ÜÜ 
(
ÜÜ 
DateTime
ÜÜ 
date
ÜÜ 
=
ÜÜ  
begin
ÜÜ! &
;
ÜÜ& '
date
ÜÜ( ,
<=
ÜÜ- /
end
ÜÜ0 3
;
ÜÜ3 4
date
ÜÜ5 9
=
ÜÜ: ;
date
ÜÜ< @
.
ÜÜ@ A
AddDays
ÜÜA H
(
ÜÜH I
$num
ÜÜI J
)
ÜÜJ K
)
ÜÜK L
{
áá 
int
ââ 
nodes
ââ 
=
ââ 
$num
ââ 
;
ââ 
int
ää 
	relations
ää 
=
ää 
$num
ää  !
;
ää! "
foreach
åå 
(
åå 
var
åå 
i
åå 
in
åå !
flights
åå" )
)
åå) *
{
çç 
if
èè 
(
èè 
i
èè 
.
èè 
ArrOnNextDay
èè &
==
èè' )
false
èè* /
)
èè/ 0
{
êê 
dateStr
ëë 
=
ëë  !
date
ëë" &
.
ëë& '
ToString
ëë' /
(
ëë/ 0
$str
ëë0 :
,
ëë: ;
System
ëë< B
.
ëëB C
Globalization
ëëC P
.
ëëP Q
CultureInfo
ëëQ \
.
ëë\ ]
InvariantCulture
ëë] m
)
ëëm n
;
ëën o
dateNextStr
íí #
=
íí$ %
date
íí& *
.
íí* +
AddDays
íí+ 2
(
íí2 3
$num
íí3 4
)
íí4 5
.
íí5 6
ToString
íí6 >
(
íí> ?
$str
íí? I
,
ííI J
System
ííK Q
.
ííQ R
Globalization
ííR _
.
íí_ `
CultureInfo
íí` k
.
íík l
InvariantCulture
ííl |
)
íí| }
;
íí} ~
Neo4JContext
îî $
.
îî$ %
RunQuery
îî% -
(
îî- .
$str
îî. F
+
îîG H
i
îîI J
.
îîJ K
Company
îîK R
+
îîS T
$str
îîU X
+
îîY Z
num
îî[ ^
+
îî_ `
i
îîa b
.
îîb c
	FlightNum
îîc l
+
îîm n
$strîîo É
+îîÑ Ö
iîîÜ á
.îîá à
Departsîîà è
+îîê ë
$strîîí ß
+îî® ©
iîî™ ´
.îî´ ¨
Arrivesîî¨ ≥
+îî¥ µ
$strîî∂ √
+îîƒ ≈
iîî∆ «
.îî« »
Priceîî» Õ
+îîŒ œ
$strîî– ‘
)îî‘ ’
;îî’ ÷
Neo4JContext
ïï $
.
ïï$ %
RunQuery
ïï% -
(
ïï- .
$str
ïï. F
+
ïïG H
i
ïïI J
.
ïïJ K
Company
ïïK R
+
ïïS T
$str
ïïU X
+
ïïY Z
num
ïï[ ^
+
ïï_ `
i
ïïa b
.
ïïb c
	FlightNum
ïïc l
+
ïïm n
$strïïo ä
+ïïã å
iïïç é
.ïïé è
Fromïïè ì
+ïïî ï
$strïïñ ô
+ïïö õ
dateStrïïú £
+ïï§ •
$strïï¶ ∏
+ïïπ ∫
iïïª º
.ïïº Ω
ToïïΩ ø
+ïï¿ ¡
$strïï¬ –
)ïï– —
;ïï— “
Neo4JContext
ññ $
.
ññ$ %
RunQuery
ññ% -
(
ññ- .
$str
ññ. F
+
ññG H
i
ññI J
.
ññJ K
Company
ññK R
+
ññS T
$str
ññU X
+
ññY Z
num
ññ[ ^
+
ññ_ `
i
ñña b
.
ññb c
	FlightNum
ññc l
+
ññm n
$strñño ä
+ññã å
iññç é
.ññé è
Toññè ë
+ññí ì
$strññî ó
+ññò ô
dateStrññö °
+ññ¢ £
$strññ§ ∂
+ññ∑ ∏
iññπ ∫
.ññ∫ ª
Toññª Ω
+ññæ ø
$strññ¿ Œ
)ññŒ œ
;ññœ –
Neo4JContext
òò $
.
òò$ %
RunQuery
òò% -
(
òò- .
$str
òò. F
+
òòG H
i
òòI J
.
òòJ K
Company
òòK R
+
òòS T
$str
òòU X
+
òòY Z
num
òò[ ^
+
òò_ `
(
òòa b
i
òòb c
.
òòc d
	FlightNum
òòd m
+
òòn o
$num
òòp q
)
òòq r
+
òòs t
$stròòu â
+òòä ã
iòòå ç
.òòç é
Departsòòé ï
+òòñ ó
$stròòò ≠
+òòÆ Ø
iòò∞ ±
.òò± ≤
Arrivesòò≤ π
+òò∫ ª
$stròòº …
+òò  À
iòòÃ Õ
.òòÕ Œ
PriceòòŒ ”
+òò‘ ’
$stròò÷ ⁄
)òò⁄ €
;òò€ ‹
Neo4JContext
ôô $
.
ôô$ %
RunQuery
ôô% -
(
ôô- .
$str
ôô. F
+
ôôG H
i
ôôI J
.
ôôJ K
Company
ôôK R
+
ôôS T
$str
ôôU X
+
ôôY Z
num
ôô[ ^
+
ôô_ `
(
ôôa b
i
ôôb c
.
ôôc d
	FlightNum
ôôd m
+
ôôn o
$num
ôôp q
)
ôôq r
+
ôôs t
$strôôu ê
+ôôë í
iôôì î
.ôôî ï
Fromôôï ô
+ôôö õ
$strôôú ü
+ôô† °
dateStrôô¢ ©
+ôô™ ´
$strôô¨ ø
+ôô¿ ¡
iôô¬ √
.ôô√ ƒ
Toôôƒ ∆
+ôô« »
$strôô… ÷
)ôô÷ ◊
;ôô◊ ÿ
Neo4JContext
öö $
.
öö$ %
RunQuery
öö% -
(
öö- .
$str
öö. F
+
ööG H
i
ööI J
.
ööJ K
Company
ööK R
+
ööS T
$str
ööU X
+
ööY Z
num
öö[ ^
+
öö_ `
(
ööa b
i
ööb c
.
ööc d
	FlightNum
ööd m
+
öön o
$num
ööp q
)
ööq r
+
öös t
$strööu ê
+ööë í
iööì î
.ööî ï
Toööï ó
+ööò ô
$strööö ù
+ööû ü
dateStröö† ß
+öö® ©
$ströö™ Ω
+ööæ ø
iöö¿ ¡
.öö¡ ¬
Toöö¬ ƒ
+öö≈ ∆
$ströö« ‘
)öö‘ ’
;öö’ ÷
nodes
úú 
+=
úú  
$num
úú! "
;
úú" #
	relations
ùù !
+=
ùù" $
$num
ùù% &
;
ùù& '
}
ûû 
else
üü 
if
üü 
(
üü 
date
üü !
!=
üü" $
end
üü% (
)
üü( )
{
†† 
dateStr
°° 
=
°°  !
date
°°" &
.
°°& '
ToString
°°' /
(
°°/ 0
$str
°°0 :
,
°°: ;
System
°°< B
.
°°B C
Globalization
°°C P
.
°°P Q
CultureInfo
°°Q \
.
°°\ ]
InvariantCulture
°°] m
)
°°m n
;
°°n o
dateNextStr
¢¢ #
=
¢¢$ %
date
¢¢& *
.
¢¢* +
AddDays
¢¢+ 2
(
¢¢2 3
$num
¢¢3 4
)
¢¢4 5
.
¢¢5 6
ToString
¢¢6 >
(
¢¢> ?
$str
¢¢? I
,
¢¢I J
System
¢¢K Q
.
¢¢Q R
Globalization
¢¢R _
.
¢¢_ `
CultureInfo
¢¢` k
.
¢¢k l
InvariantCulture
¢¢l |
)
¢¢| }
;
¢¢} ~
Neo4JContext
§§ $
.
§§$ %
RunQuery
§§% -
(
§§- .
$str
§§. F
+
§§G H
i
§§I J
.
§§J K
Company
§§K R
+
§§S T
$str
§§U X
+
§§Y Z
num
§§[ ^
+
§§_ `
i
§§a b
.
§§b c
	FlightNum
§§c l
+
§§m n
$str§§o É
+§§Ñ Ö
i§§Ü á
.§§á à
Departs§§à è
+§§ê ë
$str§§í ß
+§§® ©
i§§™ ´
.§§´ ¨
Arrives§§¨ ≥
+§§¥ µ
$str§§∂ √
+§§ƒ ≈
i§§∆ «
.§§« »
Price§§» Õ
+§§Œ œ
$str§§– ‘
)§§‘ ’
;§§’ ÷
Neo4JContext
•• $
.
••$ %
RunQuery
••% -
(
••- .
$str
••. F
+
••G H
i
••I J
.
••J K
Company
••K R
+
••S T
$str
••U X
+
••Y Z
num
••[ ^
+
••_ `
i
••a b
.
••b c
	FlightNum
••c l
+
••m n
$str••o ä
+••ã å
i••ç é
.••é è
From••è ì
+••î ï
$str••ñ ô
+••ö õ
dateStr••ú £
+••§ •
$str••¶ ∏
+••π ∫
i••ª º
.••º Ω
To••Ω ø
+••¿ ¡
$str••¬ –
)••– —
;••— “
Neo4JContext
¶¶ $
.
¶¶$ %
RunQuery
¶¶% -
(
¶¶- .
$str
¶¶. F
+
¶¶G H
i
¶¶I J
.
¶¶J K
Company
¶¶K R
+
¶¶S T
$str
¶¶U X
+
¶¶Y Z
num
¶¶[ ^
+
¶¶_ `
i
¶¶a b
.
¶¶b c
	FlightNum
¶¶c l
+
¶¶m n
$str¶¶o ä
+¶¶ã å
i¶¶ç é
.¶¶é è
To¶¶è ë
+¶¶í ì
$str¶¶î ó
+¶¶ò ô
dateNextStr¶¶ö •
+¶¶¶ ß
$str¶¶® ∫
+¶¶ª º
i¶¶Ω æ
.¶¶æ ø
To¶¶ø ¡
+¶¶¬ √
$str¶¶ƒ “
)¶¶“ ”
;¶¶” ‘
dateNextStr
®® #
=
®®$ %
date
®®& *
.
®®* +
ToString
®®+ 3
(
®®3 4
$str
®®4 >
,
®®> ?
System
®®@ F
.
®®F G
Globalization
®®G T
.
®®T U
CultureInfo
®®U `
.
®®` a
InvariantCulture
®®a q
)
®®q r
;
®®r s
dateStr
©© 
=
©©  !
date
©©" &
.
©©& '
AddDays
©©' .
(
©©. /
$num
©©/ 0
)
©©0 1
.
©©1 2
ToString
©©2 :
(
©©: ;
$str
©©; E
,
©©E F
System
©©G M
.
©©M N
Globalization
©©N [
.
©©[ \
CultureInfo
©©\ g
.
©©g h
InvariantCulture
©©h x
)
©©x y
;
©©y z
Neo4JContext
´´ $
.
´´$ %
RunQuery
´´% -
(
´´- .
$str
´´. F
+
´´G H
i
´´I J
.
´´J K
Company
´´K R
+
´´S T
$str
´´U X
+
´´Y Z
num
´´[ ^
+
´´_ `
(
´´a b
i
´´b c
.
´´c d
	FlightNum
´´d m
+
´´n o
$num
´´p q
)
´´q r
+
´´s t
$str´´u â
+´´ä ã
i´´å ç
.´´ç é
Departs´´é ï
+´´ñ ó
$str´´ò ≠
+´´Æ Ø
i´´∞ ±
.´´± ≤
Arrives´´≤ π
+´´∫ ª
$str´´º …
+´´  À
i´´Ã Õ
.´´Õ Œ
Price´´Œ ”
+´´‘ ’
$str´´÷ ⁄
)´´⁄ €
;´´€ ‹
Neo4JContext
¨¨ $
.
¨¨$ %
RunQuery
¨¨% -
(
¨¨- .
$str
¨¨. F
+
¨¨G H
i
¨¨I J
.
¨¨J K
Company
¨¨K R
+
¨¨S T
$str
¨¨U X
+
¨¨Y Z
num
¨¨[ ^
+
¨¨_ `
(
¨¨a b
i
¨¨b c
.
¨¨c d
	FlightNum
¨¨d m
+
¨¨n o
$num
¨¨p q
)
¨¨q r
+
¨¨s t
$str¨¨u ê
+¨¨ë í
i¨¨ì î
.¨¨î ï
From¨¨ï ô
+¨¨ö õ
$str¨¨ú ü
+¨¨† °
dateStr¨¨¢ ©
+¨¨™ ´
$str¨¨¨ ø
+¨¨¿ ¡
i¨¨¬ √
.¨¨√ ƒ
To¨¨ƒ ∆
+¨¨« »
$str¨¨… ÷
)¨¨÷ ◊
;¨¨◊ ÿ
Neo4JContext
≠≠ $
.
≠≠$ %
RunQuery
≠≠% -
(
≠≠- .
$str
≠≠. F
+
≠≠G H
i
≠≠I J
.
≠≠J K
Company
≠≠K R
+
≠≠S T
$str
≠≠U X
+
≠≠Y Z
num
≠≠[ ^
+
≠≠_ `
(
≠≠a b
i
≠≠b c
.
≠≠c d
	FlightNum
≠≠d m
+
≠≠n o
$num
≠≠p q
)
≠≠q r
+
≠≠s t
$str≠≠u ê
+≠≠ë í
i≠≠ì î
.≠≠î ï
To≠≠ï ó
+≠≠ò ô
$str≠≠ö ù
+≠≠û ü
dateNextStr≠≠† ´
+≠≠¨ ≠
$str≠≠Æ ¡
+≠≠¬ √
i≠≠ƒ ≈
.≠≠≈ ∆
To≠≠∆ »
+≠≠…  
$str≠≠À ÿ
)≠≠ÿ Ÿ
;≠≠Ÿ ⁄
nodes
ØØ 
+=
ØØ  
$num
ØØ! "
;
ØØ" #

_relations
∞∞ "
+=
∞∞# %
$num
∞∞& '
;
∞∞' (
}
±± 
}
≤≤ 
_nodes
≥≥ 
+=
≥≥ 
nodes
≥≥ 
;
≥≥  

_relations
¥¥ 
+=
¥¥ 
	relations
¥¥ '
;
¥¥' (
System
µµ 
.
µµ 
Console
µµ 
.
µµ 
	WriteLine
µµ (
(
µµ( )
$str
µµ) =
+
µµ> ?
num
µµ@ C
+
µµD E
$str
µµF T
+
µµU V
_nodes
µµW ]
.
µµ] ^
ToString
µµ^ f
(
µµf g
)
µµg h
+
µµi j
$str
µµk y
+
µµz {
(
µµ| }

_relationsµµ} á
)µµá à
.µµà â
ToStringµµâ ë
(µµë í
)µµí ì
)µµì î
;µµî ï
num
∑∑ 
++
∑∑ 
;
∑∑ 
}
∏∏ 
}
ππ 	
public
ºº 
List
ºº 
<
ºº 
	Countries
ºº 
>
ºº 
ReadCountries
ºº ,
(
ºº, -
)
ºº- .
{
ΩΩ 	
List
ææ 
<
ææ 
	Countries
ææ 
>
ææ 
retList
ææ #
=
ææ$ %
new
ææ& )
List
ææ* .
<
ææ. /
	Countries
ææ/ 8
>
ææ8 9
(
ææ9 :
)
ææ: ;
;
ææ; <
using
¿¿ 
(
¿¿ 
var
¿¿ 
reader
¿¿ 
=
¿¿ 
new
¿¿  #
StreamReader
¿¿$ 0
(
¿¿0 1
IntegrationConfig
¿¿1 B
.
¿¿B C
GetDataLocation
¿¿C R
(
¿¿R S
)
¿¿S T
+
¿¿U V
$str
¿¿W f
)
¿¿f g
)
¿¿g h
{
¡¡ 
int
¬¬ 
i
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
while
√√ 
(
√√ 
!
√√ 
reader
√√ 
.
√√ 
EndOfStream
√√ *
)
√√* +
{
ƒƒ 
var
≈≈ 
line
≈≈ 
=
≈≈ 
reader
≈≈ %
.
≈≈% &
ReadLine
≈≈& .
(
≈≈. /
)
≈≈/ 0
;
≈≈0 1
var
∆∆ 
values
∆∆ 
=
∆∆  
line
∆∆! %
.
∆∆% &
Split
∆∆& +
(
∆∆+ ,
$char
∆∆, /
)
∆∆/ 0
;
∆∆0 1
if
»» 
(
»» 
i
»» 
!=
»» 
$num
»» 
)
»» 
{
…… 
	Countries
   !
country
  " )
=
  * +
new
  , /
	Countries
  0 9
(
  9 :
)
  : ;
{
ÀÀ 
Name
ÃÃ  
=
ÃÃ! "
values
ÃÃ# )
[
ÃÃ) *
$num
ÃÃ* +
]
ÃÃ+ ,
,
ÃÃ, -
Code
ÕÕ  
=
ÕÕ! "
values
ÕÕ# )
[
ÕÕ) *
$num
ÕÕ* +
]
ÕÕ+ ,
}
ŒŒ 
;
ŒŒ 
retList
œœ 
.
œœ  
Add
œœ  #
(
œœ# $
country
œœ$ +
)
œœ+ ,
;
œœ, -
}
–– 
i
—— 
++
—— 
;
—— 
}
““ 
}
”” 
return
‘‘ 
retList
‘‘ 
;
‘‘ 
}
’’ 	
public
◊◊ 
List
◊◊ 
<
◊◊ 
Cities
◊◊ 
>
◊◊ 

ReadCities
◊◊ &
(
◊◊& '
)
◊◊' (
{
ÿÿ 	
List
ŸŸ 
<
ŸŸ 
Cities
ŸŸ 
>
ŸŸ 
retList
ŸŸ  
=
ŸŸ! "
new
ŸŸ# &
List
ŸŸ' +
<
ŸŸ+ ,
Cities
ŸŸ, 2
>
ŸŸ2 3
(
ŸŸ3 4
)
ŸŸ4 5
;
ŸŸ5 6
using
€€ 
(
€€ 
var
€€ 
reader
€€ 
=
€€ 
new
€€  #
StreamReader
€€$ 0
(
€€0 1
IntegrationConfig
€€1 B
.
€€B C
GetDataLocation
€€C R
(
€€R S
)
€€S T
+
€€U V
$str
€€W c
)
€€c d
)
€€d e
{
‹‹ 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
while
ﬁﬁ 
(
ﬁﬁ 
!
ﬁﬁ 
reader
ﬁﬁ 
.
ﬁﬁ 
EndOfStream
ﬁﬁ *
)
ﬁﬁ* +
{
ﬂﬂ 
var
‡‡ 
line
‡‡ 
=
‡‡ 
reader
‡‡ %
.
‡‡% &
ReadLine
‡‡& .
(
‡‡. /
)
‡‡/ 0
;
‡‡0 1
var
·· 
values
·· 
=
··  
line
··! %
.
··% &
Split
··& +
(
··+ ,
$char
··, /
)
··/ 0
;
··0 1
if
„„ 
(
„„ 
i
„„ 
!=
„„ 
$num
„„ 
)
„„ 
{
‰‰ 
Cities
ÂÂ 
city
ÂÂ #
=
ÂÂ$ %
new
ÂÂ& )
Cities
ÂÂ* 0
(
ÂÂ0 1
)
ÂÂ1 2
{
ÊÊ 
Name
ÁÁ  
=
ÁÁ! "
values
ÁÁ# )
[
ÁÁ) *
$num
ÁÁ* +
]
ÁÁ+ ,
,
ÁÁ, -
Country
ËË #
=
ËË$ %
values
ËË& ,
[
ËË, -
$num
ËË- .
]
ËË. /
}
ÈÈ 
;
ÈÈ 
retList
ÍÍ 
.
ÍÍ  
Add
ÍÍ  #
(
ÍÍ# $
city
ÍÍ$ (
)
ÍÍ( )
;
ÍÍ) *
}
ÎÎ 
i
ÏÏ 
++
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 
return
 
retList
 
;
 
}
ÒÒ 	
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
Airports
ÛÛ 
>
ÛÛ 
ReadAirports
ÛÛ *
(
ÛÛ* +
)
ÛÛ+ ,
{
ÙÙ 	
List
ıı 
<
ıı 
Airports
ıı 
>
ıı 
retList
ıı "
=
ıı# $
new
ıı% (
List
ıı) -
<
ıı- .
Airports
ıı. 6
>
ıı6 7
(
ıı7 8
)
ıı8 9
;
ıı9 :
using
˜˜ 
(
˜˜ 
var
˜˜ 
reader
˜˜ 
=
˜˜ 
new
˜˜  #
StreamReader
˜˜$ 0
(
˜˜0 1
IntegrationConfig
˜˜1 B
.
˜˜B C
GetDataLocation
˜˜C R
(
˜˜R S
)
˜˜S T
+
˜˜U V
$str
˜˜W e
)
˜˜e f
)
˜˜f g
{
¯¯ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
while
˙˙ 
(
˙˙ 
!
˙˙ 
reader
˙˙ 
.
˙˙ 
EndOfStream
˙˙ *
)
˙˙* +
{
˚˚ 
var
¸¸ 
line
¸¸ 
=
¸¸ 
reader
¸¸ %
.
¸¸% &
ReadLine
¸¸& .
(
¸¸. /
)
¸¸/ 0
;
¸¸0 1
var
˝˝ 
values
˝˝ 
=
˝˝  
line
˝˝! %
.
˝˝% &
Split
˝˝& +
(
˝˝+ ,
$char
˝˝, /
)
˝˝/ 0
;
˝˝0 1
if
ˇˇ 
(
ˇˇ 
i
ˇˇ 
!=
ˇˇ 
$num
ˇˇ 
)
ˇˇ 
{
ÄÄ 
Airports
ÅÅ  
airport
ÅÅ! (
=
ÅÅ) *
new
ÅÅ+ .
Airports
ÅÅ/ 7
(
ÅÅ7 8
)
ÅÅ8 9
{
ÇÇ 
Code
ÉÉ  
=
ÉÉ! "
values
ÉÉ# )
[
ÉÉ) *
$num
ÉÉ* +
]
ÉÉ+ ,
,
ÉÉ, -
Name
ÑÑ  
=
ÑÑ! "
values
ÑÑ# )
[
ÑÑ) *
$num
ÑÑ* +
]
ÑÑ+ ,
,
ÑÑ, -
City
ÖÖ  
=
ÖÖ! "
values
ÖÖ# )
[
ÖÖ) *
$num
ÖÖ* +
]
ÖÖ+ ,
,
ÖÖ, -
Country
ÜÜ #
=
ÜÜ$ %
values
ÜÜ& ,
[
ÜÜ, -
$num
ÜÜ- .
]
ÜÜ. /
}
áá 
;
áá 
retList
àà 
.
àà  
Add
àà  #
(
àà# $
airport
àà$ +
)
àà+ ,
;
àà, -
}
ââ 
i
ää 
++
ää 
;
ää 
}
ãã 
}
åå 
return
éé 
retList
éé 
;
éé 
}
èè 	
public
ëë 
List
ëë 
<
ëë 
Flights
ëë 
>
ëë 
ReadFlights
ëë (
(
ëë( )
)
ëë) *
{
íí 	
List
ìì 
<
ìì 
Flights
ìì 
>
ìì 
retList
ìì !
=
ìì" #
new
ìì$ '
List
ìì( ,
<
ìì, -
Flights
ìì- 4
>
ìì4 5
(
ìì5 6
)
ìì6 7
;
ìì7 8
using
ïï 
(
ïï 
var
ïï 
reader
ïï 
=
ïï 
new
ïï  #
StreamReader
ïï$ 0
(
ïï0 1
IntegrationConfig
ïï1 B
.
ïïB C
GetDataLocation
ïïC R
(
ïïR S
)
ïïS T
+
ïïU V
$str
ïïW d
)
ïïd e
)
ïïe f
{
ññ 
var
óó 
i
óó 
=
óó 
$num
óó 
;
óó 
while
òò 
(
òò 
!
òò 
reader
òò 
.
òò 
EndOfStream
òò *
)
òò* +
{
ôô 
var
öö 
line
öö 
=
öö 
reader
öö %
.
öö% &
ReadLine
öö& .
(
öö. /
)
öö/ 0
;
öö0 1
var
õõ 
values
õõ 
=
õõ  
line
õõ! %
.
õõ% &
Split
õõ& +
(
õõ+ ,
$char
õõ, /
)
õõ/ 0
;
õõ0 1
if
ùù 
(
ùù 
i
ùù 
!=
ùù 
$num
ùù 
)
ùù 
{
ûû 
var
üü 
flight
üü "
=
üü# $
new
üü% (
Flights
üü) 0
(
üü0 1
)
üü1 2
{
†† 
Company
°° #
=
°°$ %
values
°°& ,
[
°°, -
$num
°°- .
]
°°. /
.
°°/ 0
	Substring
°°0 9
(
°°9 :
$num
°°: ;
,
°°; <
$num
°°= >
)
°°> ?
,
°°? @
	FlightNum
¢¢ %
=
¢¢& '
int
¢¢( +
.
¢¢+ ,
Parse
¢¢, 1
(
¢¢1 2
values
¢¢2 8
[
¢¢8 9
$num
¢¢9 :
]
¢¢: ;
.
¢¢; <
	Substring
¢¢< E
(
¢¢E F
$num
¢¢F G
)
¢¢G H
)
¢¢H I
,
¢¢I J
From
££  
=
££! "
values
££# )
[
££) *
$num
££* +
]
££+ ,
,
££, -
To
§§ 
=
§§  
values
§§! '
[
§§' (
$num
§§( )
]
§§) *
,
§§* +
Departs
•• #
=
••$ %
values
••& ,
[
••, -
$num
••- .
]
••. /
,
••/ 0
Arrives
¶¶ #
=
¶¶$ %
values
¶¶& ,
[
¶¶, -
$num
¶¶- .
]
¶¶. /
,
¶¶/ 0
Price
ßß !
=
ßß" #
int
ßß$ '
.
ßß' (
Parse
ßß( -
(
ßß- .
values
ßß. 4
[
ßß4 5
$num
ßß5 6
]
ßß6 7
)
ßß7 8
,
ßß8 9
ArrOnNextDay
®® (
=
®®) *
bool
®®+ /
.
®®/ 0
Parse
®®0 5
(
®®5 6
values
®®6 <
[
®®< =
$num
®®= >
]
®®> ?
)
®®? @
}
©© 
;
©© 
retList
™™ 
.
™™  
Add
™™  #
(
™™# $
flight
™™$ *
)
™™* +
;
™™+ ,
}
´´ 
i
¨¨ 
++
¨¨ 
;
¨¨ 
}
≠≠ 
}
ÆÆ 
return
∞∞ 
retList
∞∞ 
;
∞∞ 
}
±± 	
}
≥≥ 
}¥¥ ◊
ZC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Logic\IntegrationConfig.cs
	namespace 	

RebusAdmin
 
. 
Logic 
{ 
public 

static 
class 
IntegrationConfig )
{ 
public 
static 
string 
GetDataBaseUri +
(+ ,
), -
{. /
return0 6
OperatingSys7 C
.C D
IsLinuxD K
(K L
)L M
?N O
$strP k
:l m
$str	n Ö
;
Ö Ü
}
á à
public 
static 
string 
GetRebusNeoUri +
(+ ,
), -
{. /
return0 6
$str7 N
;N O
}P Q
public

 
static

 
string

 
GetDataBaseUsername

 0
(

0 1
)

1 2
{

3 4
return

5 ;
$str

< C
;

C D
}

E F
public 
static 
string 
GetDataBasePassword 0
(0 1
)1 2
{3 4
return5 ;
$str< J
;J K
}L M
public 
static 
string 
GetDataLocation ,
(, -
)- .
{/ 0
return1 7
OperatingSys8 D
.D E
IsLinuxE L
(L M
)M N
?O P
$strQ ^
:_ `
$str	a ™
;
™ ´
}
¨ ≠
} 
} Ã
UC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Logic\Neo4JContext.cs
	namespace 	

RebusAdmin
 
. 
Logic 
{ 
public 

static 
class 
Neo4JContext $
{ 
public		 
static		 
readonly		 
ISession		 '
session		( /
=		0 1
GraphDatabase		2 ?
.		? @
Driver		@ F
(		F G
IntegrationConfig		G X
.		X Y
GetDataBaseUri		Y g
(		g h
)		h i
,		i j

AuthTokens		k u
.		u v
Basic		v {
(		{ |
IntegrationConfig			| ç
.
		ç é!
GetDataBaseUsername
		é °
(
		° ¢
)
		¢ £
,
		£ §
IntegrationConfig
		• ∂
.
		∂ ∑!
GetDataBasePassword
		∑  
(
		  À
)
		À Ã
)
		Ã Õ
)
		Õ Œ
.
		Œ œ
Session
		œ ÷
(
		÷ ◊
)
		◊ ÿ
;
		ÿ Ÿ
public 
static 
IStatementResult &
RunQuery' /
(/ 0
string0 6
query7 <
)< =
{ 	
try 
{ 
return 
session 
. 
Run "
(" #
query# (
)( )
;) *
} 
catch 
( 
	Exception 
ex 
)  
{ 
throw 
ex 
; 
} 
finally 
{ 
} 
} 	
public 
static 
bool 
RunTestQuery '
(' (
)( )
{ 	
try 
{ 
var 
rez 
= 
session !
.! "
Run" %
(% &
$str& (
)( )
;) *
} 
catch   
(   '
ServiceUnavailableException   .
)  . /
{!! 
return"" 
false"" 
;"" 
}## 
return%% 
true%% 
;%% 
}&& 	
}'' 
}(( ¢
UC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Logic\OperatingSys.cs
public 
static 
class 
OperatingSys  
{ 
public 

static 
bool 
	IsWindows  
(  !
)! "
=># %
RuntimeInformation 
. 
IsOSPlatform '
(' (

OSPlatform( 2
.2 3
Windows3 :
): ;
;; <
public 

static 
bool 
IsLinux 
( 
)  
=>! #
RuntimeInformation		 
.		 
IsOSPlatform		 '
(		' (

OSPlatform		( 2
.		2 3
Linux		3 8
)		8 9
;		9 :
}

 “
VC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Logic\StatusManager.cs
	namespace 	

RebusAdmin
 
. 
Logic 
{ 
public 

class 
StatusManager 
{ 
public 
bool 
checkStatus 
(  
)  !
{ 	
return		 
false		 
;		 
}

 	
} 
} ¢

JC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Program.cs
	namespace

 	

RebusAdmin


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} È
JC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\Startup.cs
	namespace 	

RebusAdmin
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
} 	
public   
void   
	Configure   
(   
IApplicationBuilder   1
app  2 5
,  5 6
IWebHostEnvironment  7 J
env  K N
)  N O
{!! 	
if"" 
("" 
env"" 
."" 
IsDevelopment"" !
(""! "
)""" #
)""# $
{## 
app$$ 
.$$ %
UseDeveloperExceptionPage$$ -
($$- .
)$$. /
;$$/ 0
}%% 
app'' 
.'' 
UseHttpsRedirection'' #
(''# $
)''$ %
;''% &
app)) 
.)) 

UseRouting)) 
()) 
))) 
;)) 
app++ 
.++ 
UseAuthorization++  
(++  !
)++! "
;++" #
app-- 
.-- 
UseEndpoints-- 
(-- 
	endpoints-- &
=>--' )
{.. 
	endpoints// 
.// 
MapControllers// (
(//( )
)//) *
;//* +
}00 
)00 
;00 
}11 	
}22 
}33 ê
OC:\Users\pkuprevicius\Documents\dotnet\FlightSystem2\RebusAdmin\WebApiClient.cs
	namespace 	

RebusAdmin
 
{		 
class

 	
WebApiClient


 
{ 
private 
static 
readonly 

HttpClient  *
client+ 1
=2 3
new4 7

HttpClient8 B
(B C
)C D
;D E
private 
static 
string 
response &
=' (
$str) 4
;4 5
public 
static 
async 
Task  
<  !
string! '
>' (
Call) -
(- .
string. 4
uri5 8
)8 9
{ 	
try 
{ 
response 
= 
await  
client! '
.' (
GetStringAsync( 6
(6 7
uri7 :
): ;
;; <
} 
catch 
(  
HttpRequestException '
)' (
{ 
return 
response 
;  
} 
System 
. 
Console 
. 
	WriteLine $
($ %
response% -
)- .
;. /
return 
response 
; 
} 	
} 
} 